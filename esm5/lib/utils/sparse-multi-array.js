var SparseMultiArrayImpl = /** @class */ (function () {
    function SparseMultiArrayImpl(maxDim, ctor) {
        this._impl = [];
        this._maxDim = maxDim;
        this._factory = ctor;
    }
    SparseMultiArrayImpl.prototype.getElement = function () {
        var numbers = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            numbers[_i] = arguments[_i];
        }
        var len = this._maxDim > numbers.length ? this._maxDim : numbers.length;
        var data = this._impl;
        for (var i = 0; i < len; i++) {
            var dimIndex = numbers[i] || 0;
            if (data[dimIndex]) {
                data = data[dimIndex];
            }
            else {
                return this._factory();
            }
        }
        return data;
    };
    SparseMultiArrayImpl.prototype.setElement = function (val) {
        var numbers = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            numbers[_i - 1] = arguments[_i];
        }
        var len = this._maxDim > numbers.length ? this._maxDim : numbers.length;
        var data = this._impl;
        for (var i = 0; i < len - 1; i++) {
            var dimIndex = numbers[i] || 0;
            if (!data[dimIndex]) {
                data[dimIndex] = [];
            }
            data = data[dimIndex];
        }
        // Unroll the last one
        var lastIndex = numbers[len - 1] || 0;
        data[lastIndex] = val;
    };
    return SparseMultiArrayImpl;
}());
export { SparseMultiArrayImpl };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhcnNlLW11bHRpLWFycmF5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvbHB3YXJlL25neC13aXphcmQvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvc3BhcnNlLW11bHRpLWFycmF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BO0lBTUksOEJBQVksTUFBYyxFQUFFLElBQWE7UUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDekIsQ0FBQztJQUVELHlDQUFVLEdBQVY7UUFBVyxpQkFBb0I7YUFBcEIsVUFBb0IsRUFBcEIscUJBQW9CLEVBQXBCLElBQW9CO1lBQXBCLDRCQUFvQjs7UUFDM0IsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzFFLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMxQixJQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2pDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO2dCQUNoQixJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3pCO2lCQUFNO2dCQUNILE9BQU8sSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQzFCO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQseUNBQVUsR0FBVixVQUFXLEdBQU07UUFBRSxpQkFBb0I7YUFBcEIsVUFBb0IsRUFBcEIscUJBQW9CLEVBQXBCLElBQW9CO1lBQXBCLGdDQUFvQjs7UUFDbkMsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzFFLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUIsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO2dCQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDO2FBQ3ZCO1lBQ0QsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN6QjtRQUVELHNCQUFzQjtRQUN0QixJQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQzFCLENBQUM7SUFDTCwyQkFBQztBQUFELENBQUMsQUF6Q0QsSUF5Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIElTcGFyc2VNdWx0aUFycmF5PFQ+IHtcclxuICAgIGdldEVsZW1lbnQoLi4ubnVtYmVyczogbnVtYmVyW10pOiBUO1xyXG4gICAgc2V0RWxlbWVudCh2YWw6IFQsIC4uLm51bWJlcnM6IG51bWJlcltdKTogdm9pZDtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBTcGFyc2VNdWx0aUFycmF5SW1wbDxUPiB7XHJcblxyXG4gICAgcHJpdmF0ZSByZWFkb25seSBfaW1wbDogYW55O1xyXG4gICAgcHJpdmF0ZSByZWFkb25seSBfbWF4RGltOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9mYWN0b3J5OiAoKSA9PiBUO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1heERpbTogbnVtYmVyLCBjdG9yOiAoKSA9PiBUKSB7XHJcbiAgICAgICAgdGhpcy5faW1wbCA9IFtdO1xyXG4gICAgICAgIHRoaXMuX21heERpbSA9IG1heERpbTtcclxuICAgICAgICB0aGlzLl9mYWN0b3J5ID0gY3RvcjtcclxuICAgIH1cclxuXHJcbiAgICBnZXRFbGVtZW50KC4uLm51bWJlcnM6IG51bWJlcltdKTogVCB7XHJcbiAgICAgICAgY29uc3QgbGVuID0gdGhpcy5fbWF4RGltID4gbnVtYmVycy5sZW5ndGggPyB0aGlzLl9tYXhEaW0gOiBudW1iZXJzLmxlbmd0aDtcclxuICAgICAgICBsZXQgZGF0YSA9IHRoaXMuX2ltcGw7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBkaW1JbmRleCA9IG51bWJlcnNbaV0gfHwgMDtcclxuICAgICAgICAgICAgaWYgKGRhdGFbZGltSW5kZXhdKSB7XHJcbiAgICAgICAgICAgICAgICBkYXRhID0gZGF0YVtkaW1JbmRleF07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZmFjdG9yeSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEVsZW1lbnQodmFsOiBULCAuLi5udW1iZXJzOiBudW1iZXJbXSkge1xyXG4gICAgICAgIGNvbnN0IGxlbiA9IHRoaXMuX21heERpbSA+IG51bWJlcnMubGVuZ3RoID8gdGhpcy5fbWF4RGltIDogbnVtYmVycy5sZW5ndGg7XHJcbiAgICAgICAgbGV0IGRhdGEgPSB0aGlzLl9pbXBsO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuIC0gMTsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRpbUluZGV4ID0gbnVtYmVyc1tpXSB8fCAwO1xyXG4gICAgICAgICAgICBpZiAoIWRhdGFbZGltSW5kZXhdKSB7XHJcbiAgICAgICAgICAgICAgICBkYXRhW2RpbUluZGV4XSA9IFtdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRhdGEgPSBkYXRhW2RpbUluZGV4XTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFVucm9sbCB0aGUgbGFzdCBvbmVcclxuICAgICAgICBjb25zdCBsYXN0SW5kZXggPSBudW1iZXJzW2xlbiAtIDFdIHx8IDA7XHJcbiAgICAgICAgZGF0YVtsYXN0SW5kZXhdID0gdmFsO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==